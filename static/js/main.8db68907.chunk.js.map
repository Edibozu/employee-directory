{"version":3,"sources":["components/Header/Header.jsx","components/Table/Table.jsx","utils/API.js","components/Search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Table","handleSort","employeeArr","props","employees","sort","a","b","name","first","setState","filterData","data","this","scope","onClick","map","employee","idx","src","picture","medium","alt","last","phone","email","dob","age","Component","axios","get","Search","state","searchTerm","filteredEmployees","handleChange","e","target","value","searchedEmployee","filter","slice","length","toLowerCase","API","then","res","console","log","results","type","placeholder","id","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAYeA,G,MATA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,oDAA2B,uBAC3B,uEC0CGC,G,kNA3CXC,WAAa,WACT,IAAIC,EAAc,EAAKC,MAAMC,UAC7BF,EAAYG,MAAK,SAACC,EAAGC,GACjB,OAAID,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,OAAe,EACrCH,EAAEE,KAAKC,MAAQF,EAAEC,KAAKC,MAAc,EACjC,KAIX,EAAKC,SAAS,CACVC,WAAYT,K,uDAMhB,OACI,wBAAOH,UAAU,sBAAsBa,KAAMC,KAAKV,MAAMS,KAAxD,UACI,gCACI,+BACI,oBAAIE,MAAM,MAAV,mBACA,wBAAQf,UAAU,OAAlB,SAAyB,oBAAIe,MAAM,MAAMC,QAASF,KAAKZ,WAA9B,oBACzB,oBAAIa,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGR,gCACKD,KAAKV,MAAMC,UAAUY,KAAI,SAACC,EAAUC,GAAX,OACtB,+BACI,6BAAI,qBAAKC,IAAKF,EAASG,QAAQC,OAAQC,IAAI,YAAgBJ,KAC3D,+BAAKD,EAAST,KAAKC,MAAnB,IAA2BQ,EAAST,KAAKe,QACzC,6BAAKN,EAASO,QACd,6BAAKP,EAASQ,QACd,6BAAKR,EAASS,IAAIC,qB,GArC1BC,c,iBCDL,EACG,WACV,OAAOC,IAAMC,IAAI,iDC8CVC,E,4MA7CXC,MAAQ,CAAE5B,UAAW,GAAI6B,WAAY,GAAIC,kBAAmB,I,EAY5DC,aAAe,SAACC,GACZ,EAAK1B,SAAS,CACVuB,WAAYG,EAAEC,OAAOC,QACtB,WACC,GAA8B,KAA1B,EAAKN,MAAMC,WACX,EAAKvB,SAAS,CAAEwB,kBAAmB,EAAKF,MAAM5B,gBAG7C,CACD,IAAMmC,EAAmB,EAAKP,MAAM5B,UAAUoC,QAAO,SAACvB,GAClD,OAAOA,EAAST,KAAKC,MAAMgC,MAAM,EAAG,EAAKT,MAAMC,WAAWS,QAAQC,gBAAkB,EAAKX,MAAMC,WAAWU,iBAG9G,EAAKjC,SAAS,CAAEwB,kBAAmBK,S,kEAtB1B,IAAD,OAChBK,IACKC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,EAAKpC,SAAS,CAAEN,UAAW0C,EAAIlC,KAAKqC,QAASf,kBAAmBY,EAAIlC,KAAKqC,e,+BA2BjF,OACI,sBAAKlD,UAAU,SAAf,UACI,sBAAMA,UAAU,qCAAhB,SACI,uBAAOmD,KAAK,OAAO1C,KAAK,aAAa2C,YAAY,wBAAwBC,GAAG,iBAAiBd,MAAOzB,KAAKmB,MAAMC,WAAYoB,SAAUxC,KAAKsB,iBAE9I,cAAC,EAAD,CAAO/B,UAAWS,KAAKmB,MAAME,2B,GAxCxBN,aCqBN0B,E,4MAnBbtB,MAAQ,CACN5B,UAAW,GACX6C,QAAS,GACTtC,WAAY,I,uDAIZ,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,uBACA,uBACA,cAAC,EAAD,CAAOK,UAAWS,KAAKmB,MAAM5B,UAAWQ,KAAMC,KAAKoC,iB,GAdzCrB,aCOH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8db68907.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Employee Directory</h1><br/>\r\n            <h5>Look up employees by First Name!</h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport \"./Table.css\"\r\n\r\nclass Table extends Component {\r\n\r\n    // handleSort function to take in the on Change function\r\n    handleSort = () => {\r\n        var employeeArr = this.props.employees;\r\n        employeeArr.sort((a, b) => {\r\n            if (a.name.first < b.name.first) return -1;\r\n            if (a.name.first > b.name.first) return 1;\r\n            return 0;\r\n            \r\n        })\r\n\r\n        this.setState({\r\n            filterData: employeeArr\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table table-striped\" data={this.props.data}>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Image</th>\r\n                        <button className=\"link\"><th scope=\"col\" onClick={this.handleSort}>Name</th></button>\r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Age</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.employees.map((employee, idx) => (\r\n                        <tr>\r\n                            <th><img src={employee.picture.medium} alt=\"employee\" key={idx}/></th>\r\n                            <th>{employee.name.first} {employee.name.last}</th>\r\n                            <th>{employee.phone}</th>\r\n                            <th>{employee.email}</th>\r\n                            <th>{employee.dob.age}</th>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployees: function(){\r\n        return axios.get(\"https://randomuser.me/api/?results=20&nat=us\")\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Table from \"../Table/Table\"\r\nimport API from \"../../utils/API\"\r\n\r\nclass Search extends Component {\r\n    state = { employees: [], searchTerm: \"\", filteredEmployees: [] }\r\n\r\n\r\n    componentDidMount() {\r\n        API.getEmployees()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({ employees: res.data.results, filteredEmployees: res.data.results })\r\n\r\n            })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            searchTerm: e.target.value\r\n        }, () => {\r\n            if (this.state.searchTerm === \"\") {\r\n                this.setState({ filteredEmployees: this.state.employees })\r\n\r\n            }\r\n            else {\r\n                const searchedEmployee = this.state.employees.filter((employee) => {\r\n                    return employee.name.first.slice(0, this.state.searchTerm.length).toLowerCase() === this.state.searchTerm.toLowerCase()\r\n                })\r\n\r\n                this.setState({ filteredEmployees: searchedEmployee })\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <form className=\"my-4 d-flex justify-content-center\">\r\n                    <input type=\"text\" name=\"searchTerm\" placeholder=\"Search an Employee...\" id=\"employeeSearch\" value={this.state.searchTerm} onChange={this.handleChange} />\r\n                </form>\r\n                <Table employees={this.state.filteredEmployees} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport Table from \"./components/Table/Table\";\n\nclass App extends Component {\n  state = {\n    employees: [],\n    results: [],\n    filterData: []\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Search />\n        <br />\n        <br />\n        <Table employees={this.state.employees} data={this.results}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}